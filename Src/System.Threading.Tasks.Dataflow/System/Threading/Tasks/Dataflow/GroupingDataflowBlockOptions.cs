using System;
using System.Diagnostics;

namespace System.Threading.Tasks.Dataflow
{
	/// <summary>Provides options used to configure the processing performed by dataflow blocks that group together multiple messages. These are dataflow blocks such as <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" /> and <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</summary>
	// Token: 0x0200002A RID: 42
	[DebuggerDisplay("TaskScheduler = {TaskScheduler}, MaxMessagesPerTask = {MaxMessagesPerTask}, BoundedCapacity = {BoundedCapacity}, Greedy = {Greedy}, MaxNumberOfGroups = {MaxNumberOfGroups}")]
	public class GroupingDataflowBlockOptions : DataflowBlockOptions
	{
		// Token: 0x06000107 RID: 263 RVA: 0x00004EFC File Offset: 0x000030FC
		internal new GroupingDataflowBlockOptions DefaultOrClone()
		{
			if (this != GroupingDataflowBlockOptions.Default)
			{
				return new GroupingDataflowBlockOptions
				{
					TaskScheduler = base.TaskScheduler,
					CancellationToken = base.CancellationToken,
					MaxMessagesPerTask = base.MaxMessagesPerTask,
					BoundedCapacity = base.BoundedCapacity,
					NameFormat = base.NameFormat,
					EnsureOrdered = base.EnsureOrdered,
					Greedy = this.Greedy,
					MaxNumberOfGroups = this.MaxNumberOfGroups
				};
			}
			return this;
		}

		/// <summary>Gets or sets the Boolean value to use to determine whether to greedily consume offered messages.</summary>
		/// <returns>true to greedily consume offered messages; otherwise, false.</returns>
		// Token: 0x17000042 RID: 66
		// (get) Token: 0x06000109 RID: 265 RVA: 0x00004F8F File Offset: 0x0000318F
		// (set) Token: 0x0600010A RID: 266 RVA: 0x00004F97 File Offset: 0x00003197
		public bool Greedy
		{
			get
			{
				return this._greedy;
			}
			set
			{
				this._greedy = value;
			}
		}

		/// <summary>Gets or sets the maximum number of groups that should be generated by the block.</summary>
		/// <returns>The maximum number of groups.</returns>
		// Token: 0x17000043 RID: 67
		// (get) Token: 0x0600010B RID: 267 RVA: 0x00004FA0 File Offset: 0x000031A0
		// (set) Token: 0x0600010C RID: 268 RVA: 0x00004FA8 File Offset: 0x000031A8
		public long MaxNumberOfGroups
		{
			get
			{
				return this._maxNumberOfGroups;
			}
			set
			{
				if (value <= 0L && value != -1L)
				{
					throw new ArgumentOutOfRangeException("value");
				}
				this._maxNumberOfGroups = value;
			}
		}

		// Token: 0x17000044 RID: 68
		// (get) Token: 0x0600010D RID: 269 RVA: 0x00004FC6 File Offset: 0x000031C6
		internal long ActualMaxNumberOfGroups
		{
			get
			{
				if (this._maxNumberOfGroups != -1L)
				{
					return this._maxNumberOfGroups;
				}
				return long.MaxValue;
			}
		}

		// Token: 0x04000071 RID: 113
		internal new static readonly GroupingDataflowBlockOptions Default = new GroupingDataflowBlockOptions();

		// Token: 0x04000072 RID: 114
		private bool _greedy = true;

		// Token: 0x04000073 RID: 115
		private long _maxNumberOfGroups = -1L;
	}
}
